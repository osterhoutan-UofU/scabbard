
; __CLANG_OFFLOAD_BUNDLE____START__ hip-amdgcn-amd-amdhsa-gfx1030
; ModuleID = 'test/test.C'
source_filename = "test/test.C"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7"
target triple = "amdgcn-amd-amdhsa"

%"struct.__HIP_Coordinates<__HIP_ThreadIdx>::__X" = type { i8 }

$_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE = comdat any

@_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE = weak protected addrspace(4) externally_initialized constant %"struct.__HIP_Coordinates<__HIP_ThreadIdx>::__X" undef, comdat, align 1
@llvm.compiler.used = appending addrspace(1) global [1 x i8*] [i8* addrspacecast (i8 addrspace(4)* getelementptr inbounds (%"struct.__HIP_Coordinates<__HIP_ThreadIdx>::__X", %"struct.__HIP_Coordinates<__HIP_ThreadIdx>::__X" addrspace(4)* @_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE, i32 0, i32 0) to i8*)], section "llvm.metadata"

; Function Attrs: convergent mustprogress norecurse nounwind willreturn
define protected amdgpu_kernel void @_Z13__d_incrementPi(i32 addrspace(1)* nocapture %0) local_unnamed_addr #0 {
  %2 = tail call i32 @llvm.amdgcn.workitem.id.x(), !range !4
  %3 = zext i32 %2 to i64
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = add nsw i64 %3, -1
  %7 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %6
  %8 = load i32, i32 addrspace(1)* %7, align 4, !tbaa !5, !amdgpu.noclobber !9
  %9 = add i32 %8, 1
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ 1, %1 ]
  fence syncscope("workgroup") release
  tail call void @llvm.amdgcn.s.barrier()
  fence syncscope("workgroup") acquire
  %12 = getelementptr inbounds i32, i32 addrspace(1)* %0, i64 %3
  store i32 %11, i32 addrspace(1)* %12, align 4, !tbaa !5
  ret void
}

; Function Attrs: convergent mustprogress nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #1

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.amdgcn.workitem.id.x() #2

attributes #0 = { convergent mustprogress norecurse nounwind willreturn "amdgpu-flat-work-group-size"="1,1024" "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx1030" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot2-insts,+dot5-insts,+dot6-insts,+dot7-insts,+dpp,+flat-address-space,+gfx10-3-insts,+gfx10-insts,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst" "uniform-work-group-size"="true" }
attributes #1 = { convergent mustprogress nounwind willreturn }
attributes #2 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1}
!opencl.ocl.version = !{!2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 1}
!2 = !{i32 2, i32 0}
!3 = !{!"AMD clang version 15.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.4.3 23045 a29fe425c7b0e5aba97ed2f95f61fd5ecba68aed)"}
!4 = !{i32 0, i32 1024}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{}

; __CLANG_OFFLOAD_BUNDLE____END__ hip-amdgcn-amd-amdhsa-gfx1030

; __CLANG_OFFLOAD_BUNDLE____START__ host-x86_64-unknown-linux-gnu
; ModuleID = 'test/test.C'
source_filename = "test/test.C"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%struct.dim3 = type { i32, i32, i32 }
%struct.ihipStream_t = type opaque

$__hip_gpubin_handle = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_Z13__d_incrementPi = dso_local constant void (i32*)* @_Z28__device_stub____d_incrementPi, align 8
@_ZSt4cout = external dso_local global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [35 x i8] c"Increment through an array:\0Asize: \00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"\0Aiterations: \00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"HIP time: \00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c" micro sec\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"NORM time: \00", align 1
@0 = private unnamed_addr constant [20 x i8] c"_Z13__d_incrementPi\00", align 1
@__hip_fatbin = external constant i8, section ".hip_fatbin"
@__hip_fatbin_wrapper = internal constant { i32, i32, i8*, i8* } { i32 1212764230, i32 1, i8* @__hip_fatbin, i8* null }, section ".hipFatBinSegment", align 8
@__hip_gpubin_handle = linkonce hidden local_unnamed_addr global i8** null, comdat, align 8
@llvm.global_ctors = appending global [2 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_test.C, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @__hip_module_ctor, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* noundef nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* noundef nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: norecurse uwtable
define dso_local void @_Z28__device_stub____d_incrementPi(i32* noundef %0) #3 {
  %2 = alloca i32*, align 8
  %3 = alloca %struct.dim3, align 8
  %4 = alloca %struct.dim3, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i32* %0, i32** %2, align 8, !tbaa !3
  %7 = alloca i8*, align 16
  %8 = bitcast i8** %7 to i32***
  store i32** %2, i32*** %8, align 16
  %9 = call i32 @__hipPopCallConfiguration(%struct.dim3* nonnull %3, %struct.dim3* nonnull %4, i64* nonnull %5, i8** nonnull %6)
  %10 = load i64, i64* %5, align 8
  %11 = bitcast i8** %6 to %struct.ihipStream_t**
  %12 = load %struct.ihipStream_t*, %struct.ihipStream_t** %11, align 8
  %13 = bitcast %struct.dim3* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.dim3, %struct.dim3* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = bitcast %struct.dim3* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.dim3, %struct.dim3* %4, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = call noundef i32 @hipLaunchKernel(i8* noundef bitcast (void (i32*)** @_Z13__d_incrementPi to i8*), i64 %14, i32 %16, i64 %18, i32 %20, i8** noundef nonnull %7, i64 noundef %10, %struct.ihipStream_t* noundef %12)
  ret void
}

declare dso_local i32 @__hipPopCallConfiguration(%struct.dim3*, %struct.dim3*, i64*, i8**) local_unnamed_addr

declare dso_local i32 @hipLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.ihipStream_t*) local_unnamed_addr

; Function Attrs: uwtable
define dso_local void @_Z13hip_incrementPiS_m(i32* noundef %0, i32* noundef %1, i64 noundef %2) local_unnamed_addr #4 {
  %4 = alloca i32*, align 8
  %5 = alloca %struct.dim3, align 8
  %6 = alloca %struct.dim3, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 16
  %10 = alloca i32*, align 8
  %11 = shl i64 %2, 2
  %12 = bitcast i32** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = bitcast i32** %10 to i8**
  %14 = call i32 @hipMalloc(i8** noundef nonnull %13, i64 noundef %11)
  %15 = load i8*, i8** %13, align 8, !tbaa !3
  %16 = bitcast i32* %1 to i8*
  %17 = call i32 @hipMemcpy(i8* noundef %15, i8* noundef %16, i64 noundef %11, i32 noundef 1)
  %18 = and i64 %2, 4294967295
  %19 = or i64 %18, 4294967296
  %20 = call i32 @__hipPushCallConfiguration(i64 4294967297, i32 1, i64 %19, i32 1, i64 noundef 0, %struct.ihipStream_t* noundef null)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %44

22:                                               ; preds = %3
  %23 = load i32*, i32** %10, align 8, !tbaa !3
  %24 = bitcast i32** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = bitcast %struct.dim3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %25)
  %26 = bitcast %struct.dim3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %26)
  %27 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  store i32* %23, i32** %4, align 8, !tbaa !3
  %30 = bitcast i8** %9 to i32***
  store i32** %4, i32*** %30, align 16
  %31 = call i32 @__hipPopCallConfiguration(%struct.dim3* nonnull %5, %struct.dim3* nonnull %6, i64* nonnull %7, i8** nonnull %8)
  %32 = load i64, i64* %7, align 8
  %33 = bitcast i8** %8 to %struct.ihipStream_t**
  %34 = load %struct.ihipStream_t*, %struct.ihipStream_t** %33, align 8
  %35 = bitcast %struct.dim3* %5 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.dim3, %struct.dim3* %5, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = bitcast %struct.dim3* %6 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.dim3, %struct.dim3* %6, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = call noundef i32 @hipLaunchKernel(i8* noundef bitcast (void (i32*)** @_Z13__d_incrementPi to i8*), i64 %36, i32 %38, i64 %40, i32 %42, i8** noundef nonnull %9, i64 noundef %32, %struct.ihipStream_t* noundef %34)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  br label %44

44:                                               ; preds = %22, %3
  %45 = call i32 @hipDeviceSynchronize()
  %46 = bitcast i32* %0 to i8*
  %47 = load i8*, i8** %13, align 8, !tbaa !3
  %48 = call i32 @hipMemcpy(i8* noundef %46, i8* noundef %47, i64 noundef %11, i32 noundef 2)
  %49 = load i8*, i8** %13, align 8, !tbaa !3
  %50 = call i32 @hipFree(i8* noundef %49)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  ret void
}

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare dso_local i32 @hipMalloc(i8** noundef, i64 noundef) local_unnamed_addr #0

declare dso_local i32 @hipMemcpy(i8* noundef, i8* noundef, i64 noundef, i32 noundef) local_unnamed_addr #0

declare dso_local i32 @__hipPushCallConfiguration(i64, i32, i64, i32, i64 noundef, %struct.ihipStream_t* noundef) local_unnamed_addr #0

declare dso_local i32 @hipDeviceSynchronize() local_unnamed_addr #0

declare dso_local i32 @hipFree(i8* noundef) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind uwtable
define dso_local void @_Z14norm_incrementPiS_m(i32* nocapture noundef writeonly %0, i32* nocapture noundef readonly %1, i64 noundef %2) local_unnamed_addr #6 {
  %4 = ptrtoint i32* %1 to i64
  %5 = ptrtoint i32* %0 to i64
  %6 = add i64 %2, -1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %95, label %8

8:                                                ; preds = %3
  %9 = icmp ult i64 %6, 8
  br i1 %9, label %75, label %10

10:                                               ; preds = %8
  %11 = add i64 %5, 4
  %12 = sub i64 %11, %4
  %13 = icmp ult i64 %12, 32
  br i1 %13, label %75, label %14

14:                                               ; preds = %10
  %15 = and i64 %6, -8
  %16 = add i64 %15, -8
  %17 = lshr exact i64 %16, 3
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %16, 0
  br i1 %20, label %56, label %21

21:                                               ; preds = %14
  %22 = and i64 %18, 4611686018427387902
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %53, %23 ]
  %25 = phi i64 [ 0, %21 ], [ %54, %23 ]
  %26 = getelementptr inbounds i32, i32* %1, i64 %24
  %27 = bitcast i32* %26 to <4 x i32>*
  %28 = load <4 x i32>, <4 x i32>* %27, align 4, !tbaa !7
  %29 = getelementptr inbounds i32, i32* %26, i64 4
  %30 = bitcast i32* %29 to <4 x i32>*
  %31 = load <4 x i32>, <4 x i32>* %30, align 4, !tbaa !7
  %32 = add nsw <4 x i32> %28, <i32 1, i32 1, i32 1, i32 1>
  %33 = add nsw <4 x i32> %31, <i32 1, i32 1, i32 1, i32 1>
  %34 = or i64 %24, 1
  %35 = getelementptr inbounds i32, i32* %0, i64 %34
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %36, align 4, !tbaa !7
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> %33, <4 x i32>* %38, align 4, !tbaa !7
  %39 = or i64 %24, 8
  %40 = getelementptr inbounds i32, i32* %1, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  %42 = load <4 x i32>, <4 x i32>* %41, align 4, !tbaa !7
  %43 = getelementptr inbounds i32, i32* %40, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 4, !tbaa !7
  %46 = add nsw <4 x i32> %42, <i32 1, i32 1, i32 1, i32 1>
  %47 = add nsw <4 x i32> %45, <i32 1, i32 1, i32 1, i32 1>
  %48 = or i64 %24, 9
  %49 = getelementptr inbounds i32, i32* %0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %50, align 4, !tbaa !7
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> %47, <4 x i32>* %52, align 4, !tbaa !7
  %53 = add nuw i64 %24, 16
  %54 = add i64 %25, 2
  %55 = icmp eq i64 %54, %22
  br i1 %55, label %56, label %23, !llvm.loop !9

56:                                               ; preds = %23, %14
  %57 = phi i64 [ 0, %14 ], [ %53, %23 ]
  %58 = icmp eq i64 %19, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds i32, i32* %1, i64 %57
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4, !tbaa !7
  %63 = getelementptr inbounds i32, i32* %60, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4, !tbaa !7
  %66 = add nsw <4 x i32> %62, <i32 1, i32 1, i32 1, i32 1>
  %67 = add nsw <4 x i32> %65, <i32 1, i32 1, i32 1, i32 1>
  %68 = or i64 %57, 1
  %69 = getelementptr inbounds i32, i32* %0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %66, <4 x i32>* %70, align 4, !tbaa !7
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> %67, <4 x i32>* %72, align 4, !tbaa !7
  br label %73

73:                                               ; preds = %56, %59
  %74 = icmp eq i64 %6, %15
  br i1 %74, label %95, label %75

75:                                               ; preds = %10, %8, %73
  %76 = phi i64 [ 0, %10 ], [ 0, %8 ], [ %15, %73 ]
  %77 = add i64 %2, 3
  %78 = add i64 %2, -2
  %79 = sub i64 %78, %76
  %80 = and i64 %77, 3
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %75, %82
  %83 = phi i64 [ %88, %82 ], [ %76, %75 ]
  %84 = phi i64 [ %90, %82 ], [ 0, %75 ]
  %85 = getelementptr inbounds i32, i32* %1, i64 %83
  %86 = load i32, i32* %85, align 4, !tbaa !7
  %87 = add nsw i32 %86, 1
  %88 = add nuw i64 %83, 1
  %89 = getelementptr inbounds i32, i32* %0, i64 %88
  store i32 %87, i32* %89, align 4, !tbaa !7
  %90 = add i64 %84, 1
  %91 = icmp eq i64 %90, %80
  br i1 %91, label %92, label %82, !llvm.loop !12

92:                                               ; preds = %82, %75
  %93 = phi i64 [ %76, %75 ], [ %88, %82 ]
  %94 = icmp ult i64 %79, 3
  br i1 %94, label %95, label %96

95:                                               ; preds = %92, %96, %73, %3
  ret void

96:                                               ; preds = %92, %96
  %97 = phi i64 [ %116, %96 ], [ %93, %92 ]
  %98 = getelementptr inbounds i32, i32* %1, i64 %97
  %99 = load i32, i32* %98, align 4, !tbaa !7
  %100 = add nsw i32 %99, 1
  %101 = add nuw i64 %97, 1
  %102 = getelementptr inbounds i32, i32* %0, i64 %101
  store i32 %100, i32* %102, align 4, !tbaa !7
  %103 = getelementptr inbounds i32, i32* %1, i64 %101
  %104 = load i32, i32* %103, align 4, !tbaa !7
  %105 = add nsw i32 %104, 1
  %106 = add nuw i64 %97, 2
  %107 = getelementptr inbounds i32, i32* %0, i64 %106
  store i32 %105, i32* %107, align 4, !tbaa !7
  %108 = getelementptr inbounds i32, i32* %1, i64 %106
  %109 = load i32, i32* %108, align 4, !tbaa !7
  %110 = add nsw i32 %109, 1
  %111 = add nuw i64 %97, 3
  %112 = getelementptr inbounds i32, i32* %0, i64 %111
  store i32 %110, i32* %112, align 4, !tbaa !7
  %113 = getelementptr inbounds i32, i32* %1, i64 %111
  %114 = load i32, i32* %113, align 4, !tbaa !7
  %115 = add nsw i32 %114, 1
  %116 = add nuw i64 %97, 4
  %117 = getelementptr inbounds i32, i32* %0, i64 %116
  store i32 %115, i32* %117, align 4, !tbaa !7
  %118 = icmp eq i64 %116, %6
  br i1 %118, label %95, label %96, !llvm.loop !14
}

; Function Attrs: norecurse uwtable
define dso_local noundef i32 @main() local_unnamed_addr #3 {
  %1 = tail call noalias noundef nonnull dereferenceable(65536) i8* @_Znam(i64 noundef 65536) #12
  %2 = tail call noalias noundef nonnull dereferenceable(65536) i8* @_Znam(i64 noundef 65536) #12
  %3 = tail call noalias noundef nonnull dereferenceable(65536) i8* @_Znam(i64 noundef 65536) #12
  tail call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(65536) %1, i8 0, i64 65536, i1 false), !tbaa !7
  %4 = bitcast i8* %1 to i32*
  %5 = bitcast i8* %2 to i32*
  %6 = bitcast i8* %3 to i32*
  %7 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i64 noundef 34)
  %8 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 noundef 16384)
  %9 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %8, i8* noundef nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 noundef 13)
  %10 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %8, i64 noundef 16384)
  %11 = bitcast %"class.std::basic_ostream"* %10 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !15
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::basic_ostream"* %10 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = getelementptr inbounds i8, i8* %17, i64 240
  %19 = bitcast i8* %18 to %"class.std::ctype"**
  %20 = load %"class.std::ctype"*, %"class.std::ctype"** %19, align 8, !tbaa !17
  %21 = icmp eq %"class.std::ctype"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %0
  tail call void @_ZSt16__throw_bad_castv() #13
  unreachable

23:                                               ; preds = %0
  %24 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %20, i64 0, i32 8
  %25 = load i8, i8* %24, align 8, !tbaa !26
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %20, i64 0, i32 9, i64 10
  %29 = load i8, i8* %28, align 1, !tbaa !29
  br label %36

30:                                               ; preds = %23
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %20)
  %31 = bitcast %"class.std::ctype"* %20 to i8 (%"class.std::ctype"*, i8)***
  %32 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %31, align 8, !tbaa !15
  %33 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %32, i64 6
  %34 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %33, align 8
  %35 = tail call noundef signext i8 %34(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %20, i8 noundef signext 10)
  br label %36

36:                                               ; preds = %27, %30
  %37 = phi i8 [ %29, %27 ], [ %35, %30 ]
  %38 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %10, i8 noundef signext %37)
  %39 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %38)
  %40 = tail call i64 @_ZNSt6chrono3_V212system_clock3nowEv() #11
  br label %106

41:                                               ; preds = %106
  %42 = tail call i64 @_ZNSt6chrono3_V212system_clock3nowEv() #11
  %43 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i64 noundef 10)
  %44 = sub nsw i64 %42, %40
  %45 = sdiv i64 %44, 1000
  %46 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIlEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 noundef %45)
  %47 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %46, i8* noundef nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 noundef 10)
  %48 = bitcast %"class.std::basic_ostream"* %46 to i8**
  %49 = load i8*, i8** %48, align 8, !tbaa !15
  %50 = getelementptr i8, i8* %49, i64 -24
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::basic_ostream"* %46 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  %55 = getelementptr inbounds i8, i8* %54, i64 240
  %56 = bitcast i8* %55 to %"class.std::ctype"**
  %57 = load %"class.std::ctype"*, %"class.std::ctype"** %56, align 8, !tbaa !17
  %58 = icmp eq %"class.std::ctype"* %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %41
  tail call void @_ZSt16__throw_bad_castv() #13
  unreachable

60:                                               ; preds = %41
  %61 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %57, i64 0, i32 8
  %62 = load i8, i8* %61, align 8, !tbaa !26
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %57, i64 0, i32 9, i64 10
  %66 = load i8, i8* %65, align 1, !tbaa !29
  br label %73

67:                                               ; preds = %60
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %57)
  %68 = bitcast %"class.std::ctype"* %57 to i8 (%"class.std::ctype"*, i8)***
  %69 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %68, align 8, !tbaa !15
  %70 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %69, i64 6
  %71 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %70, align 8
  %72 = tail call noundef signext i8 %71(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %57, i8 noundef signext 10)
  br label %73

73:                                               ; preds = %64, %67
  %74 = phi i8 [ %66, %64 ], [ %72, %67 ]
  %75 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %46, i8 noundef signext %74)
  %76 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %75)
  %77 = tail call i64 @_ZNSt6chrono3_V212system_clock3nowEv() #11
  %78 = getelementptr inbounds i32, i32* %4, i64 16376
  %79 = load i32, i32* %78, align 4, !tbaa !7
  %80 = add nsw i32 %79, 1
  %81 = getelementptr inbounds i32, i32* %5, i64 16377
  %82 = getelementptr inbounds i32, i32* %4, i64 16377
  %83 = load i32, i32* %82, align 4, !tbaa !7
  %84 = add nsw i32 %83, 1
  %85 = getelementptr inbounds i32, i32* %5, i64 16378
  %86 = getelementptr inbounds i32, i32* %4, i64 16378
  %87 = load i32, i32* %86, align 4, !tbaa !7
  %88 = add nsw i32 %87, 1
  %89 = getelementptr inbounds i32, i32* %5, i64 16379
  %90 = getelementptr inbounds i32, i32* %4, i64 16379
  %91 = load i32, i32* %90, align 4, !tbaa !7
  %92 = add nsw i32 %91, 1
  %93 = getelementptr inbounds i32, i32* %5, i64 16380
  %94 = getelementptr inbounds i32, i32* %4, i64 16380
  %95 = load i32, i32* %94, align 4, !tbaa !7
  %96 = add nsw i32 %95, 1
  %97 = getelementptr inbounds i32, i32* %5, i64 16381
  %98 = getelementptr inbounds i32, i32* %4, i64 16381
  %99 = load i32, i32* %98, align 4, !tbaa !7
  %100 = add nsw i32 %99, 1
  %101 = getelementptr inbounds i32, i32* %5, i64 16382
  %102 = getelementptr inbounds i32, i32* %4, i64 16382
  %103 = load i32, i32* %102, align 4, !tbaa !7
  %104 = add nsw i32 %103, 1
  %105 = getelementptr inbounds i32, i32* %5, i64 16383
  br label %110

106:                                              ; preds = %36, %106
  %107 = phi i64 [ 0, %36 ], [ %108, %106 ]
  tail call void @_Z13hip_incrementPiS_m(i32* noundef nonnull %6, i32* noundef nonnull %4, i64 noundef 16384)
  %108 = add nuw nsw i64 %107, 1
  %109 = icmp eq i64 %108, 16384
  br i1 %109, label %41, label %106, !llvm.loop !30

110:                                              ; preds = %180, %73
  %111 = phi i64 [ 0, %73 ], [ %181, %180 ]
  br label %112

112:                                              ; preds = %129, %110
  %113 = phi i64 [ 0, %110 ], [ %143, %129 ]
  %114 = getelementptr inbounds i32, i32* %4, i64 %113
  %115 = bitcast i32* %114 to <4 x i32>*
  %116 = load <4 x i32>, <4 x i32>* %115, align 4, !tbaa !7
  %117 = getelementptr inbounds i32, i32* %114, i64 4
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !tbaa !7
  %120 = add nsw <4 x i32> %116, <i32 1, i32 1, i32 1, i32 1>
  %121 = add nsw <4 x i32> %119, <i32 1, i32 1, i32 1, i32 1>
  %122 = or i64 %113, 1
  %123 = getelementptr inbounds i32, i32* %5, i64 %122
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %120, <4 x i32>* %124, align 4, !tbaa !7
  %125 = getelementptr inbounds i32, i32* %123, i64 4
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %126, align 4, !tbaa !7
  %127 = or i64 %113, 8
  %128 = icmp eq i64 %127, 16376
  br i1 %128, label %180, label %129, !llvm.loop !31

129:                                              ; preds = %112
  %130 = getelementptr inbounds i32, i32* %4, i64 %127
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !tbaa !7
  %133 = getelementptr inbounds i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !tbaa !7
  %136 = add nsw <4 x i32> %132, <i32 1, i32 1, i32 1, i32 1>
  %137 = add nsw <4 x i32> %135, <i32 1, i32 1, i32 1, i32 1>
  %138 = or i64 %113, 9
  %139 = getelementptr inbounds i32, i32* %5, i64 %138
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %136, <4 x i32>* %140, align 4, !tbaa !7
  %141 = getelementptr inbounds i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %142, align 4, !tbaa !7
  %143 = add nuw nsw i64 %113, 16
  br label %112

144:                                              ; preds = %180
  %145 = tail call i64 @_ZNSt6chrono3_V212system_clock3nowEv() #11
  %146 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 noundef 11)
  %147 = sub nsw i64 %145, %77
  %148 = sdiv i64 %147, 1000
  %149 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIlEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 noundef %148)
  %150 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %149, i8* noundef nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i64 noundef 10)
  %151 = bitcast %"class.std::basic_ostream"* %149 to i8**
  %152 = load i8*, i8** %151, align 8, !tbaa !15
  %153 = getelementptr i8, i8* %152, i64 -24
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.std::basic_ostream"* %149 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 %155
  %158 = getelementptr inbounds i8, i8* %157, i64 240
  %159 = bitcast i8* %158 to %"class.std::ctype"**
  %160 = load %"class.std::ctype"*, %"class.std::ctype"** %159, align 8, !tbaa !17
  %161 = icmp eq %"class.std::ctype"* %160, null
  br i1 %161, label %162, label %163

162:                                              ; preds = %144
  tail call void @_ZSt16__throw_bad_castv() #13
  unreachable

163:                                              ; preds = %144
  %164 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %160, i64 0, i32 8
  %165 = load i8, i8* %164, align 8, !tbaa !26
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %160, i64 0, i32 9, i64 10
  %169 = load i8, i8* %168, align 1, !tbaa !29
  br label %176

170:                                              ; preds = %163
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %160)
  %171 = bitcast %"class.std::ctype"* %160 to i8 (%"class.std::ctype"*, i8)***
  %172 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %171, align 8, !tbaa !15
  %173 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %172, i64 6
  %174 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %173, align 8
  %175 = tail call noundef signext i8 %174(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %160, i8 noundef signext 10)
  br label %176

176:                                              ; preds = %167, %170
  %177 = phi i8 [ %169, %167 ], [ %175, %170 ]
  %178 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %149, i8 noundef signext %177)
  %179 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %178)
  tail call void @_ZdlPv(i8* noundef nonnull %1) #14
  tail call void @_ZdlPv(i8* noundef nonnull %2) #14
  tail call void @_ZdlPv(i8* noundef nonnull %3) #14
  ret i32 0

180:                                              ; preds = %112
  store i32 %80, i32* %81, align 4, !tbaa !7
  store i32 %84, i32* %85, align 4, !tbaa !7
  store i32 %88, i32* %89, align 4, !tbaa !7
  store i32 %92, i32* %93, align 4, !tbaa !7
  store i32 %96, i32* %97, align 4, !tbaa !7
  store i32 %100, i32* %101, align 4, !tbaa !7
  store i32 %104, i32* %105, align 4, !tbaa !7
  %181 = add nuw nsw i64 %111, 1
  %182 = icmp eq i64 %181, 16384
  br i1 %182, label %144, label %110, !llvm.loop !32
}

; Function Attrs: nobuiltin allocsize(0)
declare dso_local noundef nonnull i8* @_Znam(i64 noundef) local_unnamed_addr #7

; Function Attrs: nounwind
declare dso_local i64 @_ZNSt6chrono3_V212system_clock3nowEv() local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8* noundef) local_unnamed_addr #8

declare dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i8* noundef, i64 noundef) local_unnamed_addr #0

declare dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

declare dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i8 noundef signext) local_unnamed_addr #0

declare dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() local_unnamed_addr #9

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

declare dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIlEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_test.C() #4 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #11
  ret void
}

declare dso_local i32 @__hipRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*) local_unnamed_addr

declare dso_local i8** @__hipRegisterFatBinary(i8*) local_unnamed_addr

define internal void @__hip_module_ctor() {
  %1 = load i8**, i8*** @__hip_gpubin_handle, align 8
  %2 = icmp eq i8** %1, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = tail call i8** @__hipRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__hip_fatbin_wrapper to i8*))
  store i8** %4, i8*** @__hip_gpubin_handle, align 8
  br label %5

5:                                                ; preds = %3, %0
  %6 = phi i8** [ %4, %3 ], [ %1, %0 ]
  %7 = tail call i32 @__hipRegisterFunction(i8** %6, i8* bitcast (void (i32*)** @_Z13__d_incrementPi to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @0, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null)
  %8 = tail call i32 @atexit(void ()* nonnull @__hip_module_dtor)
  ret void
}

declare dso_local void @__hipUnregisterFatBinary(i8**) local_unnamed_addr

define internal void @__hip_module_dtor() {
  %1 = load i8**, i8*** @__hip_gpubin_handle, align 8
  %2 = icmp eq i8** %1, null
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  tail call void @__hipUnregisterFatBinary(i8** nonnull %1)
  store i8** null, i8*** @__hip_gpubin_handle, align 8
  br label %4

4:                                                ; preds = %3, %0
  ret void
}

declare dso_local i32 @atexit(void ()*) local_unnamed_addr

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #6 = { argmemonly mustprogress nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { argmemonly nocallback nofree nounwind willreturn writeonly }
attributes #11 = { nounwind }
attributes #12 = { builtin allocsize(0) }
attributes #13 = { noreturn }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!"AMD clang version 15.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.4.3 23045 a29fe425c7b0e5aba97ed2f95f61fd5ecba68aed)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = distinct !{!9, !10, !11}
!10 = !{!"llvm.loop.mustprogress"}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !10, !11}
!15 = !{!16, !16, i64 0}
!16 = !{!"vtable pointer", !6, i64 0}
!17 = !{!18, !4, i64 240}
!18 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !19, i64 0, !4, i64 216, !5, i64 224, !25, i64 225, !4, i64 232, !4, i64 240, !4, i64 248, !4, i64 256}
!19 = !{!"_ZTSSt8ios_base", !20, i64 8, !20, i64 16, !21, i64 24, !22, i64 28, !22, i64 32, !4, i64 40, !23, i64 48, !5, i64 64, !8, i64 192, !4, i64 200, !24, i64 208}
!20 = !{!"long", !5, i64 0}
!21 = !{!"_ZTSSt13_Ios_Fmtflags", !5, i64 0}
!22 = !{!"_ZTSSt12_Ios_Iostate", !5, i64 0}
!23 = !{!"_ZTSNSt8ios_base6_WordsE", !4, i64 0, !20, i64 8}
!24 = !{!"_ZTSSt6locale", !4, i64 0}
!25 = !{!"bool", !5, i64 0}
!26 = !{!27, !5, i64 56}
!27 = !{!"_ZTSSt5ctypeIcE", !28, i64 0, !4, i64 16, !25, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !5, i64 56, !5, i64 57, !5, i64 313, !5, i64 569}
!28 = !{!"_ZTSNSt6locale5facetE", !8, i64 8}
!29 = !{!5, !5, i64 0}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !10, !11}
!32 = distinct !{!32, !10}

; __CLANG_OFFLOAD_BUNDLE____END__ host-x86_64-unknown-linux-gnu
