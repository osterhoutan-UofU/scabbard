{
    "doxdocgen.file.versionTag": "@version alpha 0.0.1",
    "doxdocgen.generic.authorEmail": "osterhoutan+scabbard@gmail.com",
    // "cmake.generator": "Ninja",
    "cmake.parallelJobs": 6,
    // "cmake.environment": {"ROCM_PATH":"/opt/rocm-6.0.0"},
    "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
    "C_Cpp.formatting": "vcFormat",
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda": "sameLine",
    "C_Cpp.vcFormat.newLine.beforeElse": "sameLine",
    "C_Cpp.vcFormat.newLine.beforeWhileInDoWhile": "sameLine",
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.block": "sameLine",
    "C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace": "sameLine",
    "C_Cpp.vcFormat.indent.namespaceContents": true,
    "files.associations": {
        "known_hosts": "plaintext",
        "*.json.liquid": "json",
        "*.yaml.liquid": "yaml",
        "*.md.liquid": "markdown",
        "*.js.liquid": "liquid-javascript",
        "*.css.liquid": "liquid-css",
        "*.scss.liquid": "liquid-scss",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "*.tcc": "cpp",
        "chrono": "cpp",
        "cstdint": "cpp",
        "deque": "cpp",
        "list": "cpp",
        "unordered_map": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "map": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "random": "cpp",
        "ratio": "cpp",
        "set": "cpp",
        "string": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "fstream": "cpp",
        "initializer_list": "cpp",
        "iosfwd": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "cinttypes": "cpp",
        "typeinfo": "cpp",
        "bit": "cpp",
        "bitset": "cpp",
        "condition_variable": "cpp",
        "mutex": "cpp",
        "shared_mutex": "cpp",
        "thread": "cpp",
        "*.inc": "cpp",
        "*.def": "cpp",
        "__threading_support": "cpp",
        "test.C": "cpp",
        "compare": "cpp",
        "concepts": "cpp",
        "variant": "cpp",
        "__bits": "cpp",
        "__config": "cpp",
        "__debug": "cpp",
        "__tuple": "cpp",
        "__verbose_abort": "cpp",
        "__bit_reference": "cpp",
        "__errc": "cpp",
        "__node_handle": "cpp",
        "__split_buffer": "cpp",
        "__tree": "cpp",
        "unordered_set": "cpp",
        "__hash_table": "cpp",
        "stop_token": "cpp",
        "numbers": "cpp",
        "__mutex_base": "cpp",
        "*.config": "cpp",
        "locale": "cpp",
        "version": "cpp",
        "iostream": "cpp",
        "__locale": "cpp",
        "ios": "cpp",
        "queue": "cpp",
        "semaphore": "cpp",
        "stack": "c",
        "format": "cpp",
        "iomanip": "cpp",
        "hash_map": "cpp",
        "hash_set": "cpp",
        "strstream": "cpp",
        "charconv": "cpp",
        "complex": "cpp",
        "csignal": "cpp",
        "span": "cpp",
        "cfenv": "cpp",
        "valarray": "cpp",
        "codecvt": "cpp",
        "ranges": "cpp"
    },
    "cSpell.words": [
        "amdgcn",
        "AMDHSA",
        "ASYNCQUEUE",
        "Bitcode",
        "DESYNC",
        "endregion",
        "endswith",
        "hipcc",
        "Instramentable",
        "instrumenter",
        "LIBTRACE",
        "LLNL's",
        "Malloc",
        "Memcpy",
        "startswith",
        "syncthreads",
        "Tioga",
        "tracefiles",
        "unifmem",
        "Unqual",
        "verif"
    ]
}